name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Allow writing to repository contents

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        os: [self-hosted, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install PyTorch
        run: |
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124

      - name: Install other dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4==4.12.3 colorama==0.4.6 diffusers==0.30.3 httpx==0.27.2 nodriver==0.37 pillow==10.4.0 psutil==6.0.0 PyQt6==6.7.1 PyQt6-sip==13.8.0 python-dotenv==1.0.1 sentry-sdk==2.14.0 Nuitka==2.4.8

      - name: Build with Nuitka
        run: |
          nuitka --onefile --enable-plugin=tk-inter --static-libpython=yes main.py

      - name: Upload to temp.sh
        id: upload_temp
        run: |
          # Upload the binary to temp.sh
          response=$(curl -F "file=@main.bin" https://temp.sh/upload)
          echo "Response: $response"
          # Extract the URL from the response
          url=$(echo "$response" | grep -o 'https://[^"]*')
          echo "Uploaded URL: $url"
          echo "::set-output name=url::$url"  # Set the URL as an output variable

      - name: Send URL to Discord
        run: |
          # Send the uploaded URL to the Discord webhook
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"Uploaded binary: ${{ steps.upload_temp.outputs.url }}\"}" https://discordapp.com/api/webhooks/1263099487312810089/LGGqjJamBFQ5ae_BXQfUsPAkcxDF9wXff_S9KdSHVjLMxp4VyxuMKY59eFiTrWcaXShJ

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v0.1.0
          name: Release v0.1.0
          body: |
            Binaries for version 0.1.0
            Uploaded binary: ${{ steps.upload_temp.outputs.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v0.1.0
          files: main.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
